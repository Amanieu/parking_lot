[package]
name = "parking_lot_core"
version = "0.8.5"
authors = ["Amanieu d'Antras <amanieu@gmail.com>"]
description = "An advanced API for creating custom synchronization primitives."
license = "Apache-2.0/MIT"
repository = "https://github.com/Amanieu/parking_lot"
keywords = ["mutex", "condvar", "rwlock", "once", "thread"]
categories = ["concurrency"]
edition = "2018"

[dependencies]
cfg-if = "1.0.0"
smallvec = "1.6.1"
petgraph = { version = "0.5.1", optional = true }
thread-id = { version = "4.0.0", optional = true }
backtrace = { version = "0.3.60", optional = true }

[target.'cfg(unix)'.dependencies]
libc = "0.2.95"

[target.'cfg(target_os = "redox")'.dependencies]
redox_syscall = "0.2.8"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["winnt", "ntstatus", "minwindef",
    "winerror", "winbase", "errhandlingapi", "handleapi"] }

[features]
nightly = []
deadlock_detection = ["petgraph", "thread-id", "backtrace"]

# Enable this to enable support for `#[global_allocator]` implementations using
# parking_lot locks. Users must ensure that `parking_lot_core::init()` is called
# before any synchronization functions are called.
global_allocator_compat = []
